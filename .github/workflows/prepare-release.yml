name: prepare-release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "New tag to be created"
        required: true

permissions:
  contents: read

jobs:
  update-charts:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Update Chart.yaml versions
        id: chart-update
        run: |
          # Get current version and calculate new patch version
          CURRENT_VERSION=$(grep '^version:' charts/openfero/Chart.yaml | awk '{print $2}')
          MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1)
          MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)
          PATCH=$(echo $CURRENT_VERSION | cut -d. -f3)
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
          
          # Update both version and appVersion
          sed -i "s/^version: .*/version: $NEW_VERSION/g" charts/openfero/Chart.yaml
          sed -i "s/^appVersion: .*/appVersion: ${{ github.event.inputs.tag }}/g" charts/openfero/Chart.yaml

      - name: Create Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create new branch
          BRANCH_NAME="prepare-release-${{ github.event.inputs.tag }}"
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git checkout -b $BRANCH_NAME
          git add charts/openfero/Chart.yaml
          git commit -m "chore: prepare release ${{ github.event.inputs.tag }}"
          git push origin $BRANCH_NAME

          # Create PR
          gh pr create \
            --title "chore: prepare release ${{ github.event.inputs.tag }}" \
            --body "Updates Chart.yaml with new version and appVersion for release ${{ github.event.inputs.tag }}" \
            --base main \
            --head "${BRANCH_NAME}"
