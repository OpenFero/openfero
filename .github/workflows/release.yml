# .github/workflows/release.yml
name: release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "New tag"
        required: true
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'

permissions:
  contents: read

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: write  # Add permission to create pull requests
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version-file: 'go.mod'

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set GORELEASER_PREVIOUS_TAG in actual release
        run: |
          prev_tag=$(git tag -l | sed 's/^v//' | sort -V | grep -Ev "(nightly|latest)" | tail -n 1)
          echo "GORELEASER_PREVIOUS_TAG=$prev_tag" >> "$GITHUB_ENV"

      - run: git tag ${{ github.event.inputs.tag }}

      - name: Set pre-release flag for nightly builds
        id: set-prerelease
        run: |
          if [[ "${{ github.event.inputs.tag }}" =~ .*-nightly.* ]] || [[ "${{ github.ref }}" =~ .*-nightly.* ]]; then
            echo "IS_NIGHTLY=true" >> "$GITHUB_ENV"
          else
            echo "IS_NIGHTLY=false" >> "$GITHUB_ENV"
          fi

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@9c156ee8a17a598857849441385a2041ef570552 # v6.3.0
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_CURRENT_TAG: ${{ github.event.inputs.tag }}
          GORELEASER_PREVIOUS_TAG: ${{ env.GORELEASER_PREVIOUS_TAG }}

      - name: Mark nightly release as pre-release
        if: ${{ env.IS_NIGHTLY == 'true' }}
        run: |
          # Determine release tag
          RELEASE_TAG="${{ github.event.inputs.tag }}"
          
          # Mark the release as pre-release
          gh release edit "$RELEASE_TAG" --prerelease
        env:
          GH_TOKEN: ${{ secrets.NIGHTLY_BUILD_GH_TOKEN }}

      - name: Package charts
        id: chart-releaser
        if: ${{ !contains(github.ref, '-nightly') }}
        run: |
          # Get current version and calculate new patch version
          CURRENT_VERSION=$(grep '^version:' charts/openfero/Chart.yaml | awk '{print $2}')
          MAJOR=$(echo "$CURRENT_VERSION" | cut -d. -f1)
          MINOR=$(echo "$CURRENT_VERSION" | cut -d. -f2)
          PATCH=$(echo "$CURRENT_VERSION" | cut -d. -f3)
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
          echo "NEW_VERSION=$NEW_VERSION" >> "$GITHUB_ENV"
          
          # Update both version and appVersion
          sed -i "s/^version: .*/version: $NEW_VERSION/g" charts/openfero/Chart.yaml
          sed -i "s/^appVersion: .*/appVersion: ${{ github.event.inputs.tag }}/g" charts/openfero/Chart.yaml
          
          helm package charts/* --destination .cr-release-packages

      - name: Push charts to GHCR
        id: push-charts
        if: ${{ !contains(github.ref, '-nightly') }}
        run: |
           shopt -s nullglob
           for pkg in .cr-release-packages/*; do
             if [ -z "${pkg:-}" ]; then
               break
             fi
             helm push "${pkg}" "oci://ghcr.io/openfero/openfero/charts"
           done

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        if: ${{ !contains(github.ref, '-nightly') }}
        with:
          commit-message: Bump chart version to ${{ env.NEW_VERSION }}
          title: Bump chart version to ${{ env.NEW_VERSION }}
          body: |
            Updates the Helm chart version for release ${{ github.event.inputs.tag }}
          branch: bump-chart-${{ env.NEW_VERSION }}
          base: ${{ github.ref_name }}
          add-paths: charts/openfero/Chart.yaml
          delete-branch: true
